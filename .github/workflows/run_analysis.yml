
name: Run Google Sheet Analysis
on: workflow_dispatch

jobs:

  run-analysis:
    name: Run Google Sheet Analysis
    runs-on: ubuntu-latest
    container:
      # Use a container that has tidyverse, googlesheets4, etc. installed.
      # It doesn't have to be this one
      image: 'jhudsl/anvil-poll-2024:main'

    steps:
      # Get files from the repository
      - name: checkout
        uses: actions/checkout@v4
        
      - name: get data
        id: 'get_sheet'
        uses: jroehl/gsheet.action@v2.1.1
        with:
          spreadsheetId: '1QNBCCk4eIsSLw9I_KdNtWiBYEKz-mHSzLVYLYlN6c9U' # Specific Google Sheet URL
          commands: | # list of commands, specified as a valid JSON string
            [
              { "command": "getWorksheet", "args": { "worksheetTitle": "Sheet1" }},
              { "command": "getData", "args": { "range": "'Sheet1'!A2:B3" } }
            ]
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}
          
      - name: dump results
        env:
          #  the output of the action can be found in ${{ steps.update_worksheet.outputs.results }}
          RESULTS: ${{ steps.get_sheet.outputs.results }}
        run: echo "$RESULTS" | jq
        
      # # Set up / install jq so that json credentials can be read in
      # - name: Install jq
      #   uses: dcarbone/install-jq-action@v2.1.0
      # 
      # # Run the analysis
      # - name: Run render script
      #   run: |
      #     if [ ! -d .secrets ]; then
      #       mkdir .secrets
      #     fi
      #     jq -n '${{ secrets.GS_SA_KEY }}' > .secrets/${{ secrets.GS_SA_FILENAME }}
      #     if test -f .secrets/${{ secrets.GS_SA_FILENAME }}; then
      #       echo "Key created!"
      #     fi
      #     Rscript --vanilla "R/render.R"
      #     rm -rf .secrets
